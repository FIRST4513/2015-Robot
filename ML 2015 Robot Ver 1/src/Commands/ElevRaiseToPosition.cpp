// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ElevRaiseToPosition.h"

ElevRaiseToPosition::ElevRaiseToPosition(int mode, double position) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	this->mode = mode;
	this->targetPosition = position;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::elev);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void ElevRaiseToPosition::Initialize() {
	SetTimeout(5);				// If does not reach destination in time then stop
	currPosition = Robot::elev->getCurrentPosition();

	if (targetPosition > currPosition)
		driveDirection = -1;		// Raise (-Speed) to get to destination
	else if(targetPosition < currPosition)
		driveDirection = 1;			// Lower (+Speed) to get to destination
	else driveDirection = 0;		// Stay
}

// Called repeatedly when this Command is scheduled to run
void ElevRaiseToPosition::Execute() {
	if (driveDirection < 0)	// Raise
		Robot::elev->raise();	// start elevator raising
	else if (driveDirection > 0)
		Robot::elev->lower();	// start elevator lowering
	else
		Robot::elev->hold();	// leave thing alone
}

// Make this return true when this Command no longer needs to run execute()
bool ElevRaiseToPosition::IsFinished() {
//	 SmartDashboard::PutNumber("Elev Curr Pos", currPosition);
	if (IsTimedOut() || driveDirection == 0)
		return true;

	if 	(driveDirection > 0){
		// Lowering
		if	((Robot::elev->getBottomLmtSw() == Robot::elev->kLmtSwPressed) ||
			(Robot::elev->getHitLmtSw() == Robot::elev->kLmtSwNotPressed) ||
			(Robot::elev->getCurrentPosition() <= targetPosition)){
				return true;
		}
	}

	if (driveDirection < 0){
		// Raising
		if ((Robot::elev->getTopLmtSw() ==  Robot::elev->kLmtSwPressed) ||
			(Robot::elev->getCurrentPosition() >= targetPosition)){
					return true;	// We hit the outside or destination
		}
	}
	return false;	// We havent hit any limits let things continue
}

// Called once after isFinished returns true
void ElevRaiseToPosition::End() {
	Robot::elev->hold();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ElevRaiseToPosition::Interrupted() {
	End();
}
