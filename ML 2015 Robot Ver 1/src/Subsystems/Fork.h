// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef FORK_H
#define FORK_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Fork: public Subsystem {
private:
	// It's desirable that everything possible under private except
	// for methods that implement subsystem capabilities


	// ****** Constants **************
	float kOpenSpeed = 1.;	// New threaded rod location reversed direction of motion
	float kCloseSpeed = -1;
	float kdeadband = 0.1;

	// *******************************

	float dThrottleAxis, dThrottle;
	float xAxis, speed;

public:

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController* motor;
	DigitalInput* outsideLmtSw;
	DigitalInput* insideLmtSw;
	DigitalInput* contactLeft;
	DigitalInput* contactRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	bool kLmtSwPressed = true;
	bool kLmtSwNotPressed = false;

	Fork();
	void InitDefaultCommand();
	void open();
	void close();
	void hold();
	void stop();
	void joystickDrive(Joystick* joy);		// Drive elevator by joystick
	bool drive(float speed);
	void log(Joystick* joy);					// Log data to smart dashboard

	bool getOutsideLmtSw();
	bool getInsideLmtSw();
	bool getContactLeftLmtSw();
	bool getContactRightLmtSw();
};

#endif
